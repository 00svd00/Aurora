@inject IJSRuntime JsRuntime;
@inject Aurora.Devices.Layout.GlobalDeviceLayout deviceLayout

<div class="virtual-layout" @onmouseout="OnMouseOut">

    <div id='virtual-region'>
        @foreach (Aurora.Devices.Layout.DeviceLayout device in deviceLayout.AllLayouts)
        {
            <div @onmouseover="DeviceOnMouseOver" @onmouseout="DeviceOnMouseOut" @onmousedown="DeviceOnMouseDown" >
                <DeviceLayout Device="@device" />
            </div>
        }
    </div>
</div>


@code {

    protected override void OnInitialized()
    {
        //deviceLayout.NewLayerRender += (_) => { this.StateHasChanged(); };

    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JsRuntime.InvokeAsync<object>("attachPanZoom", "#virtual-region");
        }
    }

    void OnMouseOut(MouseEventArgs e)
    {

    }

    async Task DeviceOnMouseDown(MouseEventArgs e)
    {

    }

    async Task DeviceOnMouseOver(MouseEventArgs e)
    {
        await JsRuntime.InvokeAsync<object>("pausePanZoom");
    }

    async Task DeviceOnMouseOut(MouseEventArgs e)
    {
        await JsRuntime.InvokeAsync<object>("resumePanZoom");

    }
}
