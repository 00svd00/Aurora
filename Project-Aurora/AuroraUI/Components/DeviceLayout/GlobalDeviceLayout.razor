@inject IJSRuntime JsRuntime;
@inject Aurora.Devices.Layout.GlobalDeviceLayout deviceLayout

<div class="virtual-layout no-select">
    <svg xmlns="http://www.w3.org/2000/svg" style="width:100%;height:100%" @ref="virtualLayout" data-editmode="@EditMode.ToString()">
        <g> @* Root SVG element that will have the zoom/scale and pan/translation transformations applied *@
            @foreach (var device in deviceLayout.AllLayouts) {
                <DeviceLayout Device="@device" />
            }
        </g>
    </svg>
    <ToggleButton IconRight="ruler-square" Class="virtual-layout-edit-button" @bind-Checked="EditMode" />
</div>


@code {
    ElementReference virtualLayout;

    public bool EditMode { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
            await JsRuntime.InvokeAsync<object>("auroraUi.deviceLayout.init", virtualLayout, DotNetObjectReference.Create(this));
    }

    [JSInvokable]
    public void SetDevicePosition(byte deviceId, double x, double y) {
        //var dev = deviceLayout.AllLayouts.SingleOrDefault(x => x.DeviceID == deviceId);
        var dev = deviceLayout.AllLayouts.FirstOrDefault(x => x.DeviceID == deviceId);
        if (dev != null)
            dev.Location = new System.Drawing.Point((int)x, (int)y);
    }
}
